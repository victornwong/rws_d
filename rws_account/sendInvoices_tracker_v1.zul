<?xml version="1.0" encoding="UTF-8"?>
<?page id="sendmeialtrack"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="../rwglobal/formMaker_v1.zs" />
<zscript src="../rwglobal/systemAudit.zs" />
<zscript src="../rwglobal/uploadDocu_v1.zs" />
<zscript src="../rwglobal/fc6_CustomerSelector.zs" />
<zscript src="../rwglobal/jobNotes_funcs.zs" />
<zscript src="../rwglobal/uploadedWorksheet_v1.zs" />
<zscript src="../rwglobal/emailfuncs.zs" />
<zscript>
<![CDATA[
MYTITLE = "Tax Invoice Emailer - Tracker";
MYVERSION = "v0.1";
MYPANEL = "emailsendinvt";
/**
 * @title Tax invoice emailer - tracker thing
 * @author Victor Wong
 * @since 21/05/2015
 * @notes
 * uses table rw_email_invoice to track 'em sent pdf tax invoices. extract customer-name, invoice-no and email addr
 * from pdf invoices.
*/
import java.util.*;
import java.text.*;
import java.util.regex.*;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfStamper;
import com.itextpdf.text.pdf.parser.PdfReaderContentParser;
import com.itextpdf.text.pdf.parser.SimpleTextExtractionStrategy;
import com.itextpdf.text.pdf.parser.TextExtractionStrategy;
import com.itextpdf.text.pdf.PdfContentByte;
import org.victor.*;
sechand = new SecurityFuncs();
myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals(); sqlhand = new SqlFuncs(); lbhand = new ListboxHandler();
guihand = new GuiFuncs(); luhand = new LookupFuncs(); dmshand = new DMSFuncs();
gridhand = new GridHandler(); ngfun = new NGfuncs(); rwsqlfun = new RWMS_sql();

TAXINVOICES_FOLDER = "tmp/taxinvoices";
RESEND_TAXINVOICES_FOLDER = "tmp/taxinvoices/resend";

glob_sel_obj = null;
last_showthing = 0;

glob_sel_tracker = "";

/**
 * onClick event listener for listbox in showSentInvoices()
 */
class sentinvlOnC implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		glob_sel_tracker = lbhand.getListcellItemLabel(isel,0);
	}
}
sentinvcliker = new sentinvlOnC();

/**
 * double-clicker event listener for listbox in showSentInvoices()
 */
class sentinvdblclik implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		glob_sel_obj = event.getTarget();
		glob_sel_tracker = lbhand.getListcellItemLabel(glob_sel_obj,0);
		eml = lbhand.getListcellItemLabel(glob_sel_obj,4); // email colm
		k_email.setValue(eml);
		trackerpop.open(glob_sel_obj);
	}
}
sentinvdoubleclik = new sentinvdblclik(); // pre-def global event listener

Object[] sndinvtckcols_headers =
{
	new listboxHeaderWidthObj("origid",false,""),
	new listboxHeaderWidthObj("Inv Date",true,"70px"),
	new listboxHeaderWidthObj("Inv No",true,""),
	new listboxHeaderWidthObj("Customer",true,""),
	new listboxHeaderWidthObj("Email",true,""),
	new listboxHeaderWidthObj("Filename",true,""),
	new listboxHeaderWidthObj("Sent",true,""),
	new listboxHeaderWidthObj("Resend",true,""),
	new listboxHeaderWidthObj("User",true,""),
};

/**
 * 
 * @param itype type of listout (1=by datecreated, 2=by sent-date)
 */
void showSentInvoices(int itype)
{
	last_showthing = itype;
	st = kiboo.replaceSingleQuotes(searhtxt_tb.getValue().trim());
	sdate = kiboo.getDateFromDatebox(startdate);
	edate = kiboo.getDateFromDatebox(enddate);

	Listbox newlb = lbhand.makeVWListbox_Width(sentinv_holder, sndinvtckcols_headers, "sentinvoices_lb", 20);

	sqlstm = "select * from rw_email_invoice ";

	switch(itype)
	{
		case 1 : // by datecreated
		default:
			sqlstm += "where datecreated between '" + sdate + " 00:00:00' and '" + edate + " 23:59:00' order by datecreated;";
			break;

		case 2: // by sent-date
			sqlstm += "where sentdate between '" + sdate + " 00:00:00' and '" + edate + " 23:59:00' order by sentdate;";
			break;
	}

	screcs = sqlhand.gpSqlGetRows(sqlstm);
	if(screcs.size() == 0) return;
	newlb.setRows(21); newlb.setMold("paging"); newlb.setMultiple(true);
	newlb.addEventListener("onSelect", sentinvcliker );
	ArrayList kabom = new ArrayList();
	String[] fl = { "origid", "invoice_date", "invoice_no", "customer_name", "email" , "filename", "sentdate", "resenddate", "username" };

	for(d : screcs)
	{
		ngfun.popuListitems_Data(kabom,fl,d);
		ki = lbhand.insertListItems(newlb,kiboo.convertArrayListToStringArray(kabom),"false","");
		kabom.clear();
	}
	lbhand.setDoubleClick_ListItems(newlb,sentinvdoubleclik);
}

/**
 * Simplified string regex func to extract string by pattern
 * @param istring  the whole thing
 * @param ipattern the pattern to extract substring
 */
String doregex(String istring, String ipattern)
{
	Pattern pattern = Pattern.compile(ipattern);
	Matcher matcher = pattern.matcher(istring);
	retval = "";
	if(matcher.find())
	{
		retval = kiboo.replaceSingleQuotes(matcher.group(1).trim());
	}
	return retval;
}

/**
 * Hardcoded to extract tax-invoices PDF metadata
 * @param ipath     path storing 'em tax-invoices PDFs
 * @param ifilename filename to process
 * @param iretvals  return values array (indices: 0=invoice-no, 1=invoice-date, 2=customer-name, 3=email)
 */
void extractTaxInvoiceMeta(String ipath, String ifilename, String[] iretvals)
{
	ifn = session.getWebApp().getRealPath(ipath + "/" + ifilename);
	PdfReader reader = new PdfReader(ifn);
	PdfReaderContentParser parser = new PdfReaderContentParser(reader);
	TextExtractionStrategy strategy;
	StringBuffer buff = new StringBuffer();  
	for (int i = 1; i <= reader.getNumberOfPages(); i++)
	{
		strategy = parser.processContent(i, new SimpleTextExtractionStrategy());
		buff.append(strategy.getResultantText());
	}
	reader.close();
	tis = buff.toString().replaceAll("\n"," ");
	iretvals[0] = doregex(tis,"Invoice No.: (.*?) "); // invoice-no
	iretvals[1] = doregex(tis,"Date: (.*?) "); // invoice-date
	iretvals[2] = doregex(tis,"Issue To: (.*?) PO No"); // customer-name
	iretvals[3] = doregex(tis,"Email: (.*?) ");
	if(iretvals[3].indexOf("@") == -1) iretvals[3] = ""; // not actually an email
}

/**
 * Process each file and import into database for tracking
 * @param flist files listing
 */
void procImportTaxInvoices(File[] flist)
{
	todaydate = kiboo.todayISODateTimeString();
	fndate = kiboo.todayISODateString();
	String[] invmeta = new String[4];
	File oldfile,newfile;
	sqlstm = msgtext = "";
	String[] attchfn = new String[1];

	for(d : flist)
	{
		if(d.isFile())
		{
			fn = d.getName();
			if(fn.indexOf("sent") == -1) // don't have the word "sent" in filename, it's a new file
			{
				extractTaxInvoiceMeta(TAXINVOICES_FOLDER, fn, invmeta);
				if(!invmeta[0].equals("")) // process valid invoice-no only
				{
					kfn = fn.replaceAll(".pdf","");
					kfn += "_sent" + fndate + ".pdf";

					attchfn[0] = session.getWebApp().getRealPath(TAXINVOICES_FOLDER) + "/" + kfn;

					oldfile = new File( session.getWebApp().getRealPath(TAXINVOICES_FOLDER) + "/" + fn );
					newfile = new File( attchfn[0] );

					if(oldfile.renameTo(newfile)) // make sure file can be renamed..
					{
						if( gmail_sendEmailWithAttachment_2("", GMAIL_rwms_username, GMAIL_rwms_password, GMAIL_rwms_username,
							"shopa@rentwise.com","RE: Electronic TAX INVOICE ","Testing je..", attchfn, GMAIL_rwms_username) )
						{
							sqlstm += "insert into rw_email_invoice (datecreated,invoice_no,invoice_date,customer_name,email,filename,username,sentdate) values " +
							"('" + todaydate + "','" + invmeta[0] + "','" + invmeta[1] + "','" + invmeta[2] + "','" + invmeta[3] + "','" + 
							kfn + "','" + useraccessobj.username + "','" + todaydate + "');";
						}
						else
						{
							msgtext += "\nCANNOT email: " + newfile;
						}
					}
					else
					{
						msgtext += "\nCANNOT rename file: " + oldfile;
					}
				}
			}
		}
	}

	if(!sqlstm.equals(""))
	{
		sqlhand.gpSqlExecuter(sqlstm);
		showSentInvoices(1);
	}
	else
	{
		guihand.showMessageBox("No more un-emailed pdf tax invoices..");
	}

	if(!msgtext.equals("")) alert(msgtext);

	// ks = ""; for(d : flist) { ks += (d.isFile()) ? d.getName() + "\n" : ""; } alert(ks);
}

/**
 * Scan through folder to grab un-sent tax-invoices PDF. Once sent, rename PDF - append "_sentYYYY-MM-DD"
 * Take note of the hardcoded folder where users need to put them PDFs
 */
void batchEmailTaxInvoices()
{
	File directory = new File(session.getWebApp().getRealPath(TAXINVOICES_FOLDER));
	File[] flist = directory.listFiles(); // grab files list to start processing
	procImportTaxInvoices(flist);
}

/**
 * [doFunc description]
 * @param itype button-ID
 */
void doFunc(String itype)
{
	trackerpop.close();
	if(glob_sel_tracker.equals("")) return;

	todaydate = kiboo.todayISODateTimeString();
	sqlstm = msgtext = "";

	if(itype.equals("updemail_b"))
	{
		eml = kiboo.replaceSingleQuotes(k_email.getValue());
		sqlstm = "update rw_email_invoice set email='" + eml + "' where origid=" + glob_sel_tracker;
		//add_RWAuditLog(LC_PREFIX + ilc, prevass, lgstr, useraccessobj.username);
	}

	if(!sqlstm.equals(""))
	{
		sqlhand.gpSqlExecuter(sqlstm);
		showSentInvoices(last_showthing);
	}
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);	
}

/**
 * [adminFunc description]
 * @param itype button-ID
 */
void adminFunc(String itype)
{
	adminpop.close();
	todaydate = kiboo.todayISODateTimeString();
	sqlstm = msgtext = ""; refresh = false;

	if(itype.equals("admdelete_rec"))
	{
		if(!lbhand.check_ListboxExist_SelectItem(sentinv_holder, "sentinvoices_lb")) return;
		if(Messagebox.show("HARD DELETE selected records", "Are you sure?",
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

		kx = sentinvoices_lb.getSelectedItems().toArray();
		ox = "";
		for(i=0; i<kx.length; i++) // form the list of origid to delete
		{
			ox += lbhand.getListcellItemLabel(kx[i],0) + ",";
		}
		try
		{
			ox = ox.substring(0,ox.length()-1);
			sqlstm = "delete from rw_email_invoice where origid in (" + ox + ");";
			refresh = true;
		} catch (Exception e) {}
	}

	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	if(refresh) showSentInvoices(last_showthing);
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

/**
 * Resend tax-invoice to customer. Will add watermark "DUPLICATE" into PDF
 */

void resendTaxInvoices()
{
	if(!lbhand.check_ListboxExist_SelectItem(sentinv_holder, "sentinvoices_lb")) return;

	todaydate = kiboo.todayISODateTimeString();
	String[] attchfn = new String[1];
	markfn = session.getWebApp().getRealPath("rwimg/duplicate_word.jpg");
	com.itextpdf.text.Image watermark_image = com.itextpdf.text.Image.getInstance(markfn);
	sqlstm = msgtext = "";

	kx = sentinvoices_lb.getSelectedItems().toArray();
	for(j=0; j<kx.length; j++)
	{
		pfn = lbhand.getListcellItemLabel(kx[j],5); // pdf filename from listbox
		origd = lbhand.getListcellItemLabel(kx[j],0); // tracker origid to update resenddate colm
		thefn = session.getWebApp().getRealPath(TAXINVOICES_FOLDER) + "/" + pfn;
		waterfn = session.getWebApp().getRealPath(RESEND_TAXINVOICES_FOLDER) + "/" + pfn;
		PdfReader rdpdfwater = new PdfReader(thefn);
		int number_of_pages = rdpdfwater.getNumberOfPages();
		PdfStamper stamp = new PdfStamper(rdpdfwater, new FileOutputStream(waterfn));
		int i = 0;
		watermark_image.setAbsolutePosition(100, 200);
		PdfContentByte add_watermark;
		while (i < number_of_pages)
		{
			i++;
			add_watermark = stamp.getUnderContent(i);
			add_watermark.addImage(watermark_image);
		}
		stamp.close();

		attchfn[0] = waterfn;

		if(gmail_sendEmailWithAttachment_2("", GMAIL_rwms_username, GMAIL_rwms_password, GMAIL_rwms_username,
			"victor@rentwise.com","RE: RESEND Electronic TAX INVOICE ","Testing je..", attchfn, GMAIL_rwms_username) )
		{
			sqlstm += "update rw_email_invoice set resenddate='" + todaydate + "', username='" + useraccessobj.username + "' where origid=" + origd + ";";
			// TODO put in audit-trail
		}
		else
		{
			msgtext += "\nERR: cannot resend " + thefn;
		}
	}

	if(!sqlstm.equals(""))
	{
		sqlhand.gpSqlExecuter(sqlstm);
		showSentInvoices(last_showthing);
	}

	if(!msgtext.equals("")) alert(msgtext);

}

]]>
</zscript>

<popup id="adminpop">
	<div sclass="shadowbox" style="background:#D52121">
		<vbox>
			<button id="admdelete_rec" label="DELETE" onClick="adminFunc(self.getId())" />
		</vbox>
	</div>
</popup>

<popup id="trackerpop">
	<div sclass="shadowbox" style="background:#51C6A4" width="400px">
		<grid sclass="GridLayoutNoBorder">
			<rows>
				<row style="background:#51C6A4">
					<label value="Email" sclass="k9" />
					<textbox id="k_email" sclass="k9" width="99%" />
					<button id="updemail_b" label="Update" sclass="k9" onClick="doFunc(self.getId())" />
				</row>
			</rows>
		</grid>
	</div>
</popup>

<style src="/real-world.css" />
<style>
	.GridLayoutNoBorder tr.z-row td.z-row-inner, tr.z-row .z-cell, div.z-grid
	{
	border: none; overflow: hidden; zoom: 1;
	border-top: none; border-left: none; border-right: none; border-bottom: none;
	}
</style>

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true" >
<panelchildren style="background:#4A71A4">

	<separator height="5px" />
	<hbox>
		<separator width="10px" />
		<button label="Kasi email tax-invoices" style="font-size:18px;font-weight:bold" onClick="batchEmailTaxInvoices()" />
		<button label="Kasi resend tax-invoices" style="font-size:18px;font-weight:bold" onClick="resendTaxInvoices()" />
	</hbox>
	<separator height="5px" />
	<div sclass="shadowbox" style="background:#849324" id="maintop_div" >
		<hbox>
			<label value="Start" sclass="k9b" />
			<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
			<label value="End" sclass="k9b" />
			<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
			<textbox id="searhtxt_tb" sclass="k9" />
			<button label="by date-imported" sclass="k9mo" onClick="showSentInvoices(1)" />
			<button label="by sent-date" sclass="k9mo" onClick="showSentInvoices(2)" />
			<separator width="20px" />
			<button id="adminbutt" label="ADMIN" sclass="k9mo" style="color:#D52121" visible="false" onClick="adminpop.open(self)" />
		</hbox>
	</div>
	<separator height="3px" />
	<div sclass="shadowbox" style="background:#849324">
		<div id="sentinv_holder" />
	</div>

<zscript>
<![CDATA[

if(useraccessobj.accesslevel >= 9)
{
	adminbutt.setVisible(true);
}

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>

