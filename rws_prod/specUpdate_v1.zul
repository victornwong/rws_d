<?xml version="1.0" encoding="UTF-8"?>
<?page id="specuipdyt"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="../rwglobal/formMaker_v1.zs" />
<zscript src="../rwglobal/systemAudit.zs" />
<zscript src="../rwglobal/uploadDocu_v1.zs" />
<zscript src="../rwglobal/fc6_CustomerSelector.zs" />
<zscript src="../rwglobal/jobNotes_funcs.zs" />
<zscript src="../rwglobal/uploadedWorksheet_v1.zs" />
<zscript src="../rwglobal/emailfuncs.zs" />
<zscript src="../rws_warehouse/goodsreceive/goodsrecv_funcs.zs" />
<zscript src="../rws_warehouse/goodsreceive/injtest.zs" />
<zscript>
<![CDATA[
MYTITLE = "Items Spec Update";
MYVERSION = "v0.1";
MYPANEL = "itmspecupdpanl";
/*
@Title Inventory items spec update - like in FOCUS
@Author Victor Wong
@Since 30/09/2014
@Notes
*/
import java.util.*;
import java.text.*;
import org.victor.*;
sechand = new SecurityFuncs();
myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals(); sqlhand = new SqlFuncs(); lbhand = new ListboxHandler();
guihand = new GuiFuncs(); luhand = new LookupFuncs(); dmshand = new DMSFuncs();
gridhand = new GridHandler(); ngfun = new NGfuncs(); rwsqlfun = new RWMS_sql();

String[] scanitems_colws = { "30px","250px","90px","90px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"50px",
"150px",
"50px",
"50px",
"50px",
"50px"
};
String[] scanitems_collb = { "","Item name","Asset tag","Serial",
"Grd",
"Brand",
"Type",
"Model",
"Processor",
"M.Size",
"M.Type",
"Color",
"Case",
"COA",
"COA2",
"RAM",
"HDD",
"CDROM1",
"Comment",
"Webcam",
"B.Tooth",
"F.Print",
"C.Reader"
 };

String[] specs_fields = {
"grade","Brand", "Item", "Model", "Processor", "MonitorSize", "MonitorType", "colour", "casing", "COA", "COA2", "RAM", "HDD", "Cdrom1", "Comment" };

String[] specs_sql_fields = {
"GradeYH","BrandYH","ItemTypeYH","ModelYH","ProcessorYH","MonitorSizeYH","MonitorTypeYH","ColourYH","CasingYH","COA1YH","COA2YH","RAMSizeYH","HDDSizeYH","CD1YH","CommentsYH" };

GRN_PREFIX = "GRN";

last_showgrn_type = 1;
glob_sel_grn = glob_sel_stat = "";

//showgrn_extra_sql = " and status='STKIN' ";
showgrn_extra_sql = "";
grn_show_meta = false; // used in goodsrecv_funcs.grnclicker to show grn-metadata or not

void grn_Selected_Callback() // call-back in goodsrecv_funcs.grnclicker
{
	showGRN_things(glob_sel_grn);
}

String JN_linkcode()
{
	if(glob_sel_grn.equals("")) return "";
	return GRN_PREFIX + glob_sel_grn;
}



// GRN items insert new row - won't save into DB
// knockoff for spec-update with additional fields
org.zkoss.zul.Row makeItemRow(Component irows, String iname, String iatg, String isn, String iqty, String istat)
{
	k9 = "font-size:9px";
	nrw = new org.zkoss.zul.Row();
	nrw.setParent(irows);
	ngfun.gpMakeCheckbox(nrw,"","","");
	//ngfun.gpMakeTextbox(nrw,"",iname,k9,"98%",textboxnulldrop); // item-name
	ngfun.gpMakeLabel(nrw,"",iname,k9); // item-name using label

	if(istat.equals("DRAFT")) // draft GRN, insert textboxes
	{
		//ngfun.gpMakeTextbox(nrw,"",iatg,k9,"95%",textboxnulldrop); // asset-tag
		//ngfun.gpMakeTextbox(nrw,"",isn,k9,"95%",textboxnulldrop); // serial
		//ngfun.gpMakeTextbox(nrw,"",iqty,k9,"95%",textboxnulldrop); // qty
		ngfun.gpMakeLabel(nrw,"",iatg,k9);
		ngfun.gpMakeLabel(nrw,"",isn,k9);
	}
	else // else only labels
	{
		ngfun.gpMakeLabel(nrw,"",iatg,k9);
		ngfun.gpMakeLabel(nrw,"",isn,k9);
		//ngfun.gpMakeLabel(nrw,"",iqty,k9);
	}

	for(k=0;k<specs_fields.length;k++)
	{
		ngfun.gpMakeTextbox(nrw,"","","font-size:9px","95%",textboxnulldrop);
	}

	return nrw;
}

void showGRN_things(String iwhat) // knockoff from goodsrecv_funcs.showGRN_meta()
{
	r = getGRN_rec_NEW(iwhat);
	if(r == null) return;
/*
	String[] fl = { "ourpo", "vendor", "vendor_do", "vendor_inv", "shipmentcode", "grn_remarks","origid" };
	Object[] jkl = { g_ourpo, g_vendor, g_vendor_do, g_vendor_inv, g_shipmentcode, g_grn_remarks, g_origid };
	ngfun.populateUI_Data(jkl,fl,r);

	fillDocumentsList(documents_holder,GRN_PREFIX,iwhat);
*/
	// show 'em grn items
	itms = sqlhand.clobToString(r.get("item_names")).split("~");
	atgs = sqlhand.clobToString(r.get("asset_tags")).split("~");
	srls = sqlhand.clobToString(r.get("serials")).split("~");
	qtys = sqlhand.clobToString(r.get("qtys")).split("~");
	specs = sqlhand.clobToString( r.get("specs") ).split("::");

	if(scanitems_holder.getFellowIfAny("grn_grid") != null) grn_grid.setParent(null);
	ngfun.checkMakeGrid(scanitems_colws, scanitems_collb, scanitems_holder, "grn_grid", "grn_rows", "", "", false);

	for(i=0;i<itms.length; i++)
	{
		p1 = ""; try { p1 = itms[i]; } catch (Exception e) {}
		p2 = ""; try { p2 = atgs[i]; } catch (Exception e) {}
		p3 = ""; try { p3 = srls[i]; } catch (Exception e) {}
		p4 = ""; try { p4 = qtys[i]; } catch (Exception e) {}
		nrw = makeItemRow(grn_rows,p1,p2,p3,p4,r.get("status"));

		js = null;
		try { js = specs[i].split("\n"); } catch (Exception e) { js = null; }

		ki = nrw.getChildren().toArray();

		for(k=0;k<specs_fields.length;k++)
		{
			try
			{
				if(js != null) ki[k+4].setValue(js[k]);
			} catch (java.lang.ArrayIndexOutOfBoundsException e) {}
		}
	}
	//grnmeta_holder.setVisible(true);
	//grnitems_workarea.setVisible(true);
}

void grnFunc(String itype)
{
	todaydate =  kiboo.todayISODateTimeString();
	sqlstm = msgtext = "";
	unm = useraccessobj.username;

	if(itype.equals("shwauditlogs_b"))
	{
		showSystemAudit(auditlogs_holder,JN_linkcode(),"");
		auditlogs_pop.open(shwauditlogs_b);
	}

	if(!sqlstm.equals(""))
	{
		sqlhand.gpSqlExecuter(sqlstm);
		showGRN(last_showgrn_type);
	}
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

void itemFunc(String itype)
{
	msgtext = "";

	if(itype.equals("sourcepecs_b")) // Source specs from Focus
	{
		if(Messagebox.show("Sourcing for previous specs will overwrite whatever you've inserted..", "Are you sure?",
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

		sourcePrevious_NameSerials();
	}

	if(itype.equals("savespecs_b")) // save the specs
	{
		if(glob_sel_grn.equals("")) return;
		saveSpecs();
	}

	if(itype.equals("postspecs_b")) // post SPECS into u0001
	{
		if(glob_sel_grn.equals("")) return;

		if(Messagebox.show("Posting specs into database, you cannot change anything after this..", "Are you sure?",
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

		postSpecs();

		// update the rw_grn.audit* fields accordingly
		// audit-log
 
		msgtext = "Specs posted..";
	}

	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

void postSpecs()
{
	try
	{
		jk = grn_rows.getChildren().toArray();
		sqlstm = "";
		for(i=0;i<jk.length;i++)
		{
			ki = jk[i].getChildren().toArray();
			atg = ki[2].getValue();

			if(!atg.equals("NOTAG") && !atg.equals("")) // ignore NOTAG or blank asset-tags -- inserted by RWMS
			{
				sqlstm += "update u0001 set ";
				fql = "";
				for(k=0; k<specs_fields.length;k++)
				{
					ct = kiboo.replaceSingleQuotes( ki[k+4].getValue().trim() );
					fql += specs_sql_fields[k] + "='" + ct + "',";
				}
				try { fql = fql.substring(0,fql.length()-1); } catch (Exception e) {}
				sqlstm += fql + " where extraid=(select eoff from mr001 where code2='" + atg + "');";
			}
		}

		f30_gpSqlExecuter(sqlstm);
		//alert(sqlstm);

	} catch (Exception e) {}
}

// Save the specs into rw_grn ONLY -- not posting to Focus
void saveSpecs()
{
	try
	{
		jk = grn_rows.getChildren().toArray();
		spc = "";
		for(i=0;i<jk.length;i++)
		{
			ki = jk[i].getChildren().toArray();
			for(k=0; k<specs_fields.length;k++)
			{
				ct = kiboo.replaceSingleQuotes( ki[k+4].getValue().trim() );
				if(ct.equals("")) ct = "---";
				spc += ct + "\n";
			}
			spc += "::";
		}

		sqlstm = "update rw_grn set specs='" + spc + "' where origid=" + glob_sel_grn;
		sqlhand.gpSqlExecuter(sqlstm);
		guihand.showMessageBox("OK: Specs saved..");

	} catch (Exception e) {}
}

// Source previous specs from u0001
void sourcePrevious_NameSerials()
{
	try
	{
		jk = grn_rows.getChildren().toArray();
		for(i=0;i<jk.length;i++)
		{
			ki = jk[i].getChildren().toArray();
			py = getExisting_inventoryRec(ki[2].getValue());
			if(py != null)
			{
				for(k=0; k<specs_fields.length;k++)
				{
					ct = kiboo.checkNullString( py.get(specs_fields[k]) );
					ki[k+4].setValue(ct);
				}
			}
		}
	} catch (Exception e) {}
}


]]>
</zscript>

<popup id="auditlogs_pop">
	<div sclass="shadowbox" style="background:#ef2929;" width="500px" >
		<label sclass="subhead" value="Audit Logs" />
		<separator height="3px" />
		<div id="auditlogs_holder" />
		<separator height="3px" />
		<button label="Ok" sclass="k9" onClick="auditlogs_pop.close()" />
	</div>
</popup>

<popup id="adminpop">
	<div sclass="shadowbox" style="background:#E2241C" width="300px">
	</div>
</popup>

<style src="/real-world.css" />
<style>
.GridLayoutNoBorder tr.z-row td.z-row-inner, tr.z-row .z-cell, div.z-grid
{
border: none; overflow: hidden; zoom: 1;
border-top: none; border-left: none; border-right: none; border-bottom: none;
} 
</style>

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true" >
<panelchildren style="background:#356AAC">

	<div sclass="shadowbox" style="background:#7F0850">
		<hbox style="padding:3px">
			<label value="Start date" sclass="k9b" />
			<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
			<label value="End date" sclass="k9b" />
			<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />

			<textbox id="searhtxt_tb" width="150px" sclass="k9" />
			<button label="Load/Find" sclass="k9mo" onClick="showGRN(1)" />

			<textbox id="assettag_by" width="60px" sclass="k9" />
			<button label="by asset-tag" sclass="k9mo" onClick="showGRN(3)" />

			<textbox id="grnid_tb" width="50px" sclass="k9" />
			<button label="by GRN" sclass="k9mo" onClick="showGRN(2)" />

			<button id="shwauditlogs_b" label="AuditLog" sclass="k9mo" onClick="grnFunc(self.getId())" />

			<button id="admin_b" label="ADMIN" sclass="k9mo" style="color:#D60D0D" visible="false" onClick="adminpop.open(self)" />
		</hbox>
	</div>

	<div sclass="shadowbox" style="background:#36427F">
		<hbox visible="false">
			<button id="newgrn_b" label="New GRN" sclass="k9mo" onClick="grnFunc(self.getId())" />
			<button id="remgrn_b" label="Remove" sclass="k9mo" onClick="grnFunc(self.getId())" />
			<button id="commgrn_b" label="Commit" sclass="k9mo" onClick="grnFunc(self.getId())" />
			<button id="uptstock_b" label="UPDATE INVENTORY" sclass="k9mo" style="color:#D41212" onClick="grnFunc(self.getId())" visible="false" />
			<separator width="10px" />
		</hbox>
		<separator height="3px" />
		<div id="grnheaders_holder" />
	</div>

	<separator height="3px" />

	<div sclass="shadowbox" style="background:#7F0850">
		<hbox>
			<button id="savespecs_b" label="SAVE specs" sclass="k9mo" onClick="itemFunc(self.getId())" />
			<button id="sourcepecs_b" label="Source previous" sclass="k9mo" onClick="itemFunc(self.getId())" />
			<button id="postspecs_b" label="POST specs" sclass="k9mo" style="color:#CD3A3A" onClick="itemFunc(self.getId())" />
		</hbox>
	</div>
	<separator height="3px" />

	<div sclass="shadowbox" style="background:#7FAE42;overflow:auto;overflow-y:hidden" >
		<div id="scanitems_holder" width="1500px" />
	</div>

<zscript>
<![CDATA[

ngfun.checkMakeGrid(scanitems_colws, scanitems_collb, scanitems_holder, "grn_grid", "grn_rows", "", "", false);

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>

