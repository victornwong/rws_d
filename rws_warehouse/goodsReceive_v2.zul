<?xml version="1.0" encoding="UTF-8"?>
<?page id="goodsrecv2mod"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="../rwglobal/formMaker_v1.zs" />
<zscript src="../rwglobal/systemAudit.zs" />
<zscript src="../rwglobal/uploadDocu_v1.zs" />
<zscript src="../rwglobal/fc6_CustomerSelector.zs" />
<zscript src="../rwglobal/jobNotes_funcs.zs" />
<zscript src="../rwglobal/uploadedWorksheet_v1.zs" />
<zscript src="../rwglobal/emailfuncs.zs" />
<zscript src="./goodsreceive/goodsrecv_funcs.zs" />
<zscript src="./goodsreceive/injtest.zs" />
<zscript>
<![CDATA[
MYTITLE = "Goods Receival";
MYVERSION = "v0.2";
MYPANEL = "goodsrecv2pan";
/*
@Title Goods receiving module
@Authoer Victor Wong
@Since 18/09/2014
@Notes
Total redesign from last year's module - to replace tempGRN, MRN and audit specs update. Import from GCO also.

16/10/2014: generate GRN printout . goodsrecv_funcs.zs.genPrint_GRN()

*/
import java.util.*;
import java.text.*;
import org.victor.*;
sechand = new SecurityFuncs();
myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals(); sqlhand = new SqlFuncs(); lbhand = new ListboxHandler();
guihand = new GuiFuncs(); luhand = new LookupFuncs(); dmshand = new DMSFuncs();
gridhand = new GridHandler(); ngfun = new NGfuncs(); rwsqlfun = new RWMS_sql();

GRN_PREFIX = "GRN";

last_showgrn_type = 1;
glob_sel_grn = glob_sel_stat = glob_sel_auditstat = "";

grn_show_meta = true; // used in goodsrecv_funcs.grnclicker
showgrn_extra_sql = "";

String JN_linkcode()
{
	if(glob_sel_grn.equals("")) return "";
	return GRN_PREFIX + glob_sel_grn;
}

void grn_Selected_Callback() // call-back in goodsrecv_funcs.grnclicker
{}

void itemFunc(String itype)
{
	msgtext = "";

	if(itype.equals("clrticks_b")) // clear 'em checkboxes
	{
		try
		{
			jk = grn_rows.getChildren().toArray();
			for(i=0;i<jk.length;i++)
			{
				ki = jk[i].getChildren().toArray();
				ki[0].setChecked( (ki[0].isChecked()) ? false : true );
			}
		} catch (Exception e) {}
	}

	if(itype.equals("additem_b"))
	{
		if(glob_sel_stat.equals("DRAFT"))
			makeItemRow(grn_rows,"","","","1","DRAFT");
	}

	if(itype.equals("fillupitems_b")) // fill-up items from textboxes
	{
		if(glob_sel_stat.equals("DRAFT"))
			fillUp_scanned_assets();
		else
			msgtext = "ERR: GRN already commit or Stock-in";
	}

	if(itype.equals("remitem_b")) // remove only ticked
	{
		if(!glob_sel_stat.equals("DRAFT")) return;
		itemsRemovalfunc(1); // goodsrecv_funcs.zs
	}

	if(itype.equals("remall_b")) // remove all
	{
		if(!glob_sel_stat.equals("DRAFT")) return;

		if(Messagebox.show("Remove ALL items..", "Are you sure?",
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

		itemsRemovalfunc(2);
	}

	if(itype.equals("saveitems_b")) // save scanned-items to grn
	{
		if(glob_sel_grn.equals("")) return;
		if(glob_sel_stat.equals("DRAFT")) saveGRN_items(glob_sel_grn);
	}

	if(itype.equals("sourcedets_b")) // try to source product-name and serials for existing asset-tags
	{
		if(glob_sel_grn.equals("")) return;
		if(glob_sel_stat.equals("DRAFT")) sourcePrevious_NameSerials();
	}

	if(itype.equals("impgco_b")) // import from GCO -- have to redesign abit GCO module as it's pointing to Focus T.GRN data instead
	{
		impGCO_pop.close();
		if(!glob_sel_stat.equals("DRAFT")) return;

		gn = kiboo.replaceSingleQuotes( imp_gco_tb.getValue().trim() );
		if(gn.equals("")) return;
		import_FromGCO(gn);
	}

	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

void grnFunc(String itype)
{
	todaydate =  kiboo.todayISODateTimeString();
	sqlstm = msgtext = "";
	unm = useraccessobj.username;

	if(itype.equals("newgrn_b"))
	{
		sqlstm = "insert into rw_grn (username,datecreated,ourpo,status) values " +
		"('" + unm + "','" + todaydate + "','','DRAFT');";
	}

	if(itype.equals("updgrn_b"))
	{
		if(glob_sel_grn.equals("")) return;
		if(!glob_sel_stat.equals("DRAFT")) return;

		Object[] jkl = { g_ourpo, g_vendor, g_vendor_do, g_vendor_inv, g_shipmentcode, g_grn_remarks };
		dt = ngfun.getString_fromUI(jkl);

		sqlstm = "update rw_grn set ourpo='" + dt[0] + "', vendor='" + dt[1] + "'," +
		"vendor_do='" + dt[2] + "', vendor_inv='" + dt[3] + "', shipmentcode='" + dt[4] + "', grn_remarks='" + dt[5] + "' where origid=" + glob_sel_grn;
	}

	if(itype.equals("remgrn_b"))
	{
		if(glob_sel_grn.equals("")) return;
		if(glob_sel_stat.equals("DRAFT"))
		{
			if(Messagebox.show("Totally remove GRN and all scanned asset-tags/serials..", "Are you sure?", 
				Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

			sqlstm = "delete from rw_grn where origid=" + glob_sel_grn;
			hidereset_workarea();
		}
		else
		{
			msgtext = "ERR: Can only remove DRAFT GRN !!";
		}
	}

	if(itype.equals("commgrn_b")) // commit GRN - lock it
	{
		if(glob_sel_grn.equals("")) return;
		if(!glob_sel_stat.equals("COMMIT") && !glob_sel_stat.equals("STKIN"))
		{
			sqlstm = "update rw_grn set status='COMMIT',commitdate='" + todaydate + "' where origid=" + glob_sel_grn;
			hidereset_workarea();
			add_RWAuditLog(JN_linkcode(),"", "Commit GRN", useraccessobj.username);
			// TODO send notif email to procurement
			emsg = "RE: New GRN committed" + glob_sel_grn;
			gmail_sendEmail("", GMAIL_username, GMAIL_password, GMAIL_username, "victor@rentwise.com", emsg, "Do check items are received in good order.");
		}
		else
		{
			msgtext = "ERR: GRN already committed or stock-in..";
		}
	}

	if(itype.equals("uptstock_b")) // update inventory FC6
	{
		if(glob_sel_grn.equals("")) return;
		if(glob_sel_stat.equals("COMMIT"))
		{
			if(Messagebox.show("This will stock-in the GRN items.. POINT OF NO RETURN!!", "Are you sure?",
				Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

			updateInventory_GRNItems(); // IMPORTANT TODO need to chg pallet-loca to AUDIT when first stock-in
			sqlstm = "update rw_grn set status='STKIN' where origid=" + glob_sel_grn;
			msgtext = "OK: Inventory stock-in..";
			hidereset_workarea();
		}
		else
		{
			msgtext = "ERR: Commit the GRN first before stock-in or GRN already stock-in";
		}
	}

	if(itype.equals("shwauditlogs_b"))
	{
		showSystemAudit(auditlogs_holder,JN_linkcode(),"");
		auditlogs_pop.open(shwauditlogs_b);
	}

	if(itype.equals("genprn_b"))
	{
		if(glob_sel_grn.equals("")) return;
		if(glob_sel_stat.equals("COMMIT") || glob_sel_stat.equals("STKIN")) // commit/stkin can print grn
		{
			genPrint_GRN(glob_sel_grn);
			add_RWAuditLog(JN_linkcode(),"", "Generate and print GRN", useraccessobj.username);
		}
	}

	if(!sqlstm.equals(""))
	{
		sqlhand.gpSqlExecuter(sqlstm);
		showGRN(last_showgrn_type);
	}
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

void adminFunc(String itype)
{
	adminpop.close();
	todaydate =  kiboo.todayISODateTimeString();
	sqlstm = msgtext = "";
	unm = useraccessobj.username;

	if(glob_sel_grn.equals("")) return;

	if(itype.equals("delgrn_b")) // totally delete
	{
		if(Messagebox.show("HARD delete GRN..", "Are you sure?",
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

		sqlstm = "delete from rw_grn where origid=" + glob_sel_grn;
		hidereset_workarea();
	}

	if(itype.equals("settodate_b")) // set GRN to today's date
	{
		sqlstm = "update rw_grn set datecreated='" + todaydate + "' where origid=" + glob_sel_grn;
	}

	if(itype.equals("setdraftgrn_b"))
	{
		sqlstm = "update rw_grn set status='DRAFT',commitdate=null where origid=" + glob_sel_grn;
		hidereset_workarea();
	}

	if(itype.equals("minustock_b") || itype.equals("addstock_b"))
	{
		kk = kiboo.replaceSingleQuotes( a_minus_stock.getValue().trim() );
		ki = 1;
		try { ki = Integer.parseInt(kk); } catch (Exception e) { return; }
		if(Messagebox.show("Will " + ((itype.equals("minustock_b")) ? "minus" : "add") + " those ticked items qty..", "Are you sure?",
			Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) !=  Messagebox.YES) return;

		mt = (itype.equals("minustock_b")) ? 1 : 2;
		minusAddFocus_Stock(mt,ki);
	}

	if(!sqlstm.equals(""))
	{
		sqlhand.gpSqlExecuter(sqlstm);
		showGRN(last_showgrn_type);
	}
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

// Inject stock items and qtys, only item with pre-def product-name will work
// use palletid 4=UNKNOWN (TODO chg to "WH PALLET" id for fc5012)
// IMPORTANT chg pallet-loca to AUDIT . GRN->AUDIT process, F30 palletid = 4, F12=4452
void updateInventory_GRNItems()
{
	AUDIT_PALLET_ID = "4452";
	try
	{
		log_assettags = "";
		shpc = kiboo.replaceSingleQuotes( g_shipmentcode.getValue().trim() );
		tdate = calcFocusDate( kiboo.todayISODateTimeString() ).toString();
		sqlstm = "declare @maxid int; declare @maxseq int; declare @prodid varchar(200); declare @_masterid int; ";

		jk = grn_rows.getChildren().toArray();
		for(i=0;i<jk.length;i++) // check if items scanned
		{
			ki = jk[i].getChildren().toArray();
			itm = ki[1].getValue();
			atg = kiboo.replaceSingleQuotes( ki[2].getValue().trim() );
			snm = kiboo.replaceSingleQuotes( ki[3].getValue().trim() );
			qty = kiboo.replaceSingleQuotes( ki[4].getValue().trim() );
			try { kx = Integer.parseInt(qty); } catch (Exception e) { qty = "1"; } // just have to make sure got qty

			if(!itm.equals("")) // only entry with item-name
			{
				log_assettags += atg + "(" + snm + " / " + qty + "), ";

				sqlstm += "if not exists(select 1 from mr001 where code2='" + atg + "')" +
				"begin " +
				"set @maxid = (select max(masterid)+1 from mr001);" +
				"set @maxseq = (select max(sequence)+1 from mr001);" +
				"set @prodid = (select top 1 masterid from mr008 where name='" + itm + "'); " +

				"insert into mr001 (masterid,sequence,name,code,code2,limit,l2,type,attribute,eoff,doff,creditdays,date_,time_,limit2) " +
				"values (@maxid,@maxseq, " +
				"'" + itm + " - " + atg + "','" + snm + "','" + atg + "', " +
				"0,-1,131,0,@maxid,0,0," + tdate + ",0xe332e,0); " +

				"insert into u0001 (extraid,productnameyh,palletnoyh,shipmentcodeyh) values (@maxid,@prodid," + AUDIT_PALLET_ID + ",'" + shpc + "'); " +

				"insert into ibals (code,date_,dep,qiss,qrec,val,qty2) " +
				"values (@maxid," + tdate + ",0,0," + qty + ",0,0); " +

				"end else begin " +
				"set @_masterid = (select masterid from mr001 where code2='" + atg + "'); " +

				"insert into ibals (code,date_,dep,qiss,qrec,val,qty2) " +
				"values (@_masterid," + tdate + ",0,0," + qty + ",0,0); " +

				//"update mr001 set name='" + itm + "',code='" + snm + "' where code2='" + atg + "';" +
				"end;";
			}
		}
		//f30_gpSqlExecuter(sqlstm);
		sqlhand.rws_gpSqlExecuter(sqlstm);
		lgstr = "Update inventory : " + log_assettags;
		add_RWAuditLog(JN_linkcode(),"", lgstr, useraccessobj.username);

	} catch (Exception e) {}
}

// used by admin for now .. later put into another module to FAST add/minus stock
// itype: 1=minus stock, 2=add stock
void minusAddFocus_Stock(int itype, int qty)
{
	try
	{
		if(itype == 1) qty *= -1;

		tdate = calcFocusDate( kiboo.todayISODateTimeString() ).toString();

		sqlstm = "declare @_masterid int; ";
		jk = grn_rows.getChildren().toArray();
		for(i=0;i<jk.length;i++)
		{
			ki = jk[i].getChildren().toArray();
			atg = kiboo.replaceSingleQuotes( ki[2].getValue().trim() );

			if(ki[0].isChecked() && !atg.equals(""))
			{
				sqlstm += "if exists(select 1 from mr001 where code2='" + atg + "')" +
				"begin " +
				"set @_masterid = (select masterid from mr001 where code2='" + atg + "'); " +
				"insert into ibals (code,date_,dep,qiss,qrec,val,qty2) ";

				switch(itype)
				{
					case 1: // do QISS
						sqlstm +=
						"values (@_masterid," + tdate + ",0," + qty.toString() + ",0,0,0); " +
						"end; ";
						break;

					case 2: // do QREC
					sqlstm +=
						"values (@_masterid," + tdate + ",0,0," + qty.toString() + ",0,0); " +
						"end; ";
						break;
				}
			}
		}
		sqlhand.rws_gpSqlExecuter(sqlstm);
		//f30_gpSqlExecuter(sqlstm);
	} catch (Exception e) {}	
}

]]>
</zscript>

<popup id="auditlogs_pop">
	<div sclass="shadowbox" style="background:#ef2929;" width="500px" >
		<label sclass="subhead" value="Audit Logs" />
		<separator height="3px" />
		<div id="auditlogs_holder" />
		<separator height="3px" />
		<button label="Ok" sclass="k9" onClick="auditlogs_pop.close()" />
	</div>
</popup>

<popup id="updatefiledesc_popup"> <!-- update file description popup -->
	<groupbox width="400px">
		<caption id="updatefiledesc_label" />
		<label value="Description" class="k9" />
		<textbox id="update_file_description" multiline="true" height="70px" width="99%" class="k9" />
		<separator height="3px" />
		<hbox>
			<button label="Update" class="k9" onClick="updateFileDescription(documents_holder,GRN_PREFIX,glob_sel_grn)" />
			<button label="Close" class="k9" onClick="updatefiledesc_popup.close()" />
		</hbox>
	</groupbox>
</popup>

<popup id="uploadfile_popup"> <!-- upload a file popup -->
	<groupbox>
	<caption label="Upload a file" />
		<grid>
			<rows>
				<row>
					<label value="Filename" class="k9" />
					<textbox id="fileupl_file_title" width="200px" class="k9" />
				</row>
				<row>
					<label value="Description" class="k9" />
					<textbox id="fileupl_file_description" multiline="true" height="60px" width="200px" class="k9" />
				</row>
			</rows>
		</grid>
	</groupbox>
	<separator height="3px" />
	<hbox>
		<button label="Select file" onClick="uploadFile(documents_holder,GRN_PREFIX,glob_sel_grn)" class="k9" />
		<button label="Close" onClick="uploadfile_popup.close()"  class="k9" />
	</hbox>
</popup>

<popup id="selecProduct_pop">
	<div sclass="shadowbox" style="background:#818D16" width="400px">
		<hbox>
			<textbox id="selprod_tb" width="200px" sclass="k9" />
			<button label="Search" sclass="k9mo" onClick="searchProductName_FC(selprod_tb.getValue())" />
		</hbox>
		<label value="(Max 50 items per search)" style="font-size:8px" />
		<separator height="3px" />
		<div id="selprods_holder" />
	</div>
</popup>

<popup id="impGCO_pop">
	<div sclass="shadowbox" style="background:#818D16" width="400px">
		<label value="GCO" sclass="k9" />
		<textbox id="imp_gco_tb" sclass="k9" />
		<button id="impgco_b" label="Import" sclass="k9mo" onClick="itemFunc(self.getId())" />
	</div>
</popup>

<popup id="adminpop">
	<div sclass="shadowbox" style="background:#E2241C" width="300px">
		<vbox>
			<button id="setdraftgrn_b" label="Set DRAFT" sclass="k9mo" onClick="adminFunc(self.getId())" />
			<button id="settodate_b" label="Set todate" sclass="k9mo" onClick="adminFunc(self.getId())" />
			<button id="delgrn_b" label="DELETE GRN" sclass="k9mo" onClick="adminFunc(self.getId())" />
			<hbox>
				<textbox id="a_minus_stock" sclass="k9" value="1" />
				<button id="minustock_b" label="-stock" sclass="k9mo" onClick="adminFunc(self.getId())" />
				<button id="addstock_b" label="+stock" sclass="k9mo" onClick="adminFunc(self.getId())" />
			</hbox>
		</vbox>
	</div>
</popup>

<popup id="smallHelp_pop">
	<div sclass="shadowbox" style="background:#4CC5C1" width="300px">
	<label multiline="true" sclass="k9">
V.DO = Vendor Delivery Order
V.Inv = Vendor Invoice
GCO = Goods Collection Order
A.Date = Audit date
A.Stat = Audit status
A.User = Audit user
	</label>
	</div>
</popup>

<popup id="expasspop">
	<div id="expass_div" width="700px" />
</popup>

<style src="/real-world.css" />
<style>
.GridLayoutNoBorder tr.z-row td.z-row-inner, tr.z-row .z-cell, div.z-grid
{
border: none; overflow: hidden; zoom: 1;
border-top: none; border-left: none; border-right: none; border-bottom: none;
} 
</style>

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true">
<panelchildren style="background:#322B29">

	<div sclass="shadowbox" style="background:#7F0850">
		<hbox style="padding:3px">
			<label value="Start date" sclass="k9b" />
			<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
			<label value="End date" sclass="k9b" />
			<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />

			<textbox id="searhtxt_tb" width="150px" sclass="k9" />
			<button label="Load/Find" sclass="k9mo" onClick="showGRN(1)" />

			<textbox id="assettag_by" width="60px" sclass="k9" />
			<button label="by asset-tag" sclass="k9mo" onClick="showGRN(3)" />

			<textbox id="grnid_tb" width="50px" sclass="k9" />
			<button label="by GRN" sclass="k9mo" onClick="showGRN(2)" />

			<button id="admin_b" label="ADMIN" sclass="k9mo" style="color:#D60D0D" visible="false" onClick="adminpop.open(self)" />
		</hbox>
	</div>

	<div sclass="shadowbox" style="background:#36427F">
		<hbox>
			<button id="newgrn_b" label="New GRN" sclass="k9mo" onClick="grnFunc(self.getId())" />
			<button id="remgrn_b" label="Remove" sclass="k9mo" onClick="grnFunc(self.getId())" />
			<button id="commgrn_b" label="Commit" sclass="k9mo" onClick="grnFunc(self.getId())" />
			<button id="genprn_b" label="Print GRN" sclass="k9mo" onClick="grnFunc(self.getId())" />
			<button id="uptstock_b" label="UPDATE INVENTORY" sclass="k9mo" style="color:#D41212" onClick="grnFunc(self.getId())" visible="false" />
			<separator width="10px" />
			<button id="shwauditlogs_b" label="AuditLog" sclass="k9mo" onClick="grnFunc(self.getId())" />
			<button label="Help" sclass="k9" onClick="smallHelp_pop.open(self)" />
		</hbox>
		<separator height="3px" />
		<div id="grnheaders_holder" />
	</div>

	<hbox>

		<vbox>
			<div id="grnmeta_holder" sclass="shadowbox" style="background:#36427F" visible="false" width="450px">
				<grid>
					<rows>
						<row spans="1,3" style="background:#61A2E3">
							<label value="GRN No." style="font-weight:bold" />
							<label id="g_origid" style="font-weight:bold" />
						</row>
						<row>
							<label value="OurRef(PO/GCO/ etc)" sclass="k9" />
							<textbox id="g_ourpo" sclass="k9" />
							<label value="Shipment Code" sclass="k9" />
							<textbox id="g_shipmentcode" sclass="k9" />
						</row>
						<row spans="1,3">
							<label value="Vendor / Customer" sclass="k9" />
							<textbox id="g_vendor" sclass="k9" width="99%" />
						</row>
						<row>
							<label value="Vendor Invoice" sclass="k9" />
							<textbox id="g_vendor_inv" sclass="k9" width="99%" />
							<label value="Vendor DO" sclass="k9" />
							<textbox id="g_vendor_do" sclass="k9" width="99%" />
						</row>
						<row spans="1,3">
							<label value="Remarks" sclass="k9" />
							<textbox id="g_grn_remarks" sclass="k9" width="99%" height="70px" multiline="true" />
						</row>
					</rows>
				</grid>
				<separator height="3px" />
				<hbox>
					<button id="updgrn_b" label="Update GRN metadata" sclass="k9mo" onClick="grnFunc(self.getId())" />
				</hbox>

				<separator height="3px" />

				<div sclass="shadowbox" style="background:#555753" id="docholder" width="${BOXWIDTH}">
					<vbox>
						<label sclass="subhead1">ATTACHMENT / DOCUMENTS</label>
						<label sclass="k9b" value="(Attached vendor scan-copy of DO/Invoice/Anything here)" />
						<hbox>
							<button id="uploaddoc_btn" label="Upload file" class="k9" onClick="showUploadPopup(GRN_PREFIX,glob_sel_grn)" />
							<button id="viewdoc_btn" label="View file" class="k9" onClick="viewFile()" />
							<button id="editdoc_btn" label="Update" class="k9" onClick="updatefiledesc_popup.open(self)" />
							<button id="deletedoc_btn" label="Delete" class="k9" onClick="deleteFile(documents_holder,GRN_PREFIX,glob_sel_grn)" />
						</hbox>
						<div id="documents_holder" />
					</vbox>
				</div>
			</div>
		</vbox>

		<vbox id="grnitems_workarea" visible="false">
			<div sclass="shadowbox" style="background:#36427F">
<!--
Hide serial-no box as Satish wanted only 1 barcode scan textbox , 2 lines constitute asset-tag + serial-no
have to change fillUp_scanned_assets() accordingly
-->
				<grid sclass="GridLayoutNoBorder" width="250px">
					<rows>
						<row style="background:#36427F">
							<label value="Scan asset-tags/serial-numbers" style="color:#ffffff;font-weight:bold" />
							<label value="Scan serial-numbers" style="color:#ffffff;font-weight:bold" visible="false" />
						</row>
						<row style="background:#36427F">
							<textbox id="main_scan_atgs" width="99%" height="200px" multiline="true" />
							<textbox id="main_scan_serials" width="99%" height="200px" multiline="true" visible="false" />
						</row>
					</rows>
				</grid>
				<hbox>
					<button id="fillupitems_b" label="Insert" sclass="k9mo" onClick="itemFunc(self.getId())" />
					<button label="Clear assets-tags" sclass="k9mo" onClick='main_scan_atgs.setValue("")' />
					<button label="Clear serial-numbers" sclass="k9mo" onClick='main_scan_serials.setValue("")' visible="false" />
				</hbox>
			</div>

			<vbox>
				<div sclass="shadowbox" style="background:#36427F">
					<hbox>
						<button id="clrticks_b" label="Ticks" sclass="k9mo" onClick="itemFunc(self.getId())" />
						<button id="additem_b" label="Add item" sclass="k9mo" onClick="itemFunc(self.getId())" />
						<button id="remitem_b" label="Remove" sclass="k9mo" onClick="itemFunc(self.getId())" />
						<button id="remall_b" label="Remove ALL" sclass="k9mo" onClick="itemFunc(self.getId())" />
						<button id="sourcedets_b" label="Source details" sclass="k9mo" onClick="itemFunc(self.getId())" />
						<button id="selprod_b" label="Select product name" sclass="k9mo" onClick="selecProduct_pop.open(self)" />
						<button id="mainbutt_impgco" label="Import GCO" sclass="k9mo" onClick="impGCO_pop.open(self)" />
						<button id="saveitems_b" label="SAVE" sclass="k9mo" onClick="itemFunc(self.getId())" />
					</hbox>
					<label sclass="k9mo" style="color:#ffffff">
					(For items without asset-tags, fill-up asset-tag field with item-name)
					</label>
				</div>
				<div id="scanitems_holder" />
			</vbox>
		</vbox>

	</hbox>

<zscript>
<![CDATA[

ngfun.checkMakeGrid(scanitems_colws, scanitems_collb, scanitems_holder, "grn_grid", "grn_rows", "", "", false);

unm = useraccessobj.username;
// only these users can see the update inventory butt
if(unm.equals("padmin"))
{
	uptstock_b.setVisible(true);
}

if(useraccessobj.accesslevel == 9)
{
	admin_b.setVisible(true);
}

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>

