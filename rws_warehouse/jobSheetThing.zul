<?xml version="1.0" encoding="UTF-8"?>
<?page id="jobshetthingmod"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript>
<![CDATA[
MYTITLE = "Production Job Sheet";
MYVERSION = "v0.1";
MYPANEL = "jobsheetpanel";
/*
<zscript src="../rws_account/jobMaker_funcs.zs" />
@Title Job sheet thing for production
@Author Victor Wong
@Since 27/08/2014

@Notes
*/
import java.util.*;
import java.text.*;
import org.victor.*;
sechand = new SecurityFuncs();

myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals(); sqlhand = new SqlFuncs(); lbhand = new ListboxHandler();
guihand = new GuiFuncs(); luhand = new LookupFuncs(); dmshand = new DMSFuncs();
gridhand = new GridHandler();
NGfuncs ngfun = new NGfuncs(); RWMS_sql rwsqlfun = new RWMS_sql();

glob_sel_job = "";

void checkMakeItemsGrid()
{
	String[] colws = { "50px","",                "60px" ,"60px" };
	String[] colls = { "No." ,"Item description","Color","Qty"  };

	if(items_holder.getFellowIfAny("items_grid") == null) // make new grid if none
	{
		igrd = new Grid();
		igrd.setId("items_grid");
		igrd.setWidth("800px");

		icols = new org.zkoss.zul.Columns();
		for(i=0;i<colws.length;i++)
		{
			ico0 = new org.zkoss.zul.Column();
			ico0.setWidth(colws[i]);
			ico0.setLabel(colls[i]);
			//ico0.setAlign("center");
			ico0.setStyle("background:#97b83a");
			ico0.setParent(icols);
		}

		icols.setParent(igrd);

		irows = new org.zkoss.zul.Rows();
		irows.setId("items_rows");
		irows.setParent(igrd);
		igrd.setParent(items_holder);
	}
}


// Codes chopped from jobMaker_funcs.showJobItems()
void showJobItems_chopped(Object tjrc)
{
	if(items_holder.getFellowIfAny("items_grid") != null) items_grid.setParent(null);
	saved_label.setVisible(false);
	grandtotalbox.setVisible(false);
	
	glob_icomponents_counter = 1; // reset for new grid

	if(tjrc.get("items") == null) return; // nothing to show

	checkMakeItemsGrid();
	items = tjrc.get("items").split("::");
	qtys = tjrc.get("qtys").split("::");
	colors = tjrc.get("colors").split("::");
	kk = "font-weight:bold;";

	for(i=0;i<items.length;i++)
	{
		cmid = glob_icomponents_counter.toString();

		irow = gridhand.gridMakeRow("IRW" + cmid ,"","",items_rows);
		ngfun.gpMakeLabel(irow,"",cmid + ".", kk + "font-size:14px");

		soms = "";
		try { soms = items[i]; } catch (Exception e) {}

		lk = ngfun.gpMakeLabel(irow,"",soms,"font-size:9px;font-weight:bold;");
		lk.setMultiline(true);

		soms = "";
		try { soms = colors[i]; } catch (Exception e) {}
		ngfun.gpMakeLabel(irow,"",soms,kk);

		soms = "";
		try { soms = qtys[i]; } catch (Exception e) {}
		ngfun.gpMakeLabel(irow,"",soms,kk);

		glob_icomponents_counter++;
	}

}

void showThings(String iwhat)
{
	jrec = rwsqlfun.getRWJob_rec(iwhat);
	showJobItems_chopped(jrec);
}

Object[] jobslbhds = 
{
	new listboxHeaderWidthObj("Job",true,"50px"),
	new listboxHeaderWidthObj("Dated",true,"80px"),
	new listboxHeaderWidthObj("Customer",true,""),
	new listboxHeaderWidthObj("User",true,"80px"),
	new listboxHeaderWidthObj("JobType",true,"60px"),
	new listboxHeaderWidthObj("OrderType",true,"60px"),
	new listboxHeaderWidthObj("Prty",true,"60px"),
	new listboxHeaderWidthObj("ETD",true,"80px"),
	new listboxHeaderWidthObj("ETA",true,"80px"),
	new listboxHeaderWidthObj("Pickup",true,"80px"),
	new listboxHeaderWidthObj("P.By",true,"80px"),
};

class jbslbClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		glob_sel_job = lbhand.getListcellItemLabel(isel,0);
		showThings(glob_sel_job);
	}
}
jobsclkier = new jbslbClick();

void showJobs(int itype)
{
	scht = kiboo.replaceSingleQuotes(searhtxt_tb.getValue().trim());
	sdate = kiboo.getDateFromDatebox(startdate);
	edate = kiboo.getDateFromDatebox(enddate);
	jid = kiboo.replaceSingleQuotes(jobid_tb.getValue().trim());

	Listbox newlb = lbhand.makeVWListbox_Width(jobs_holder, jobslbhds, "jobs_lb", 3);

	sqlstm = "select top 50 origid, datecreated, customer_name, username, jobtype, priority, eta, etd, order_type, " +
	"pickup_date, pickup_by from rw_jobs ";

	switch(itype)
	{
		case 1: // by date and search-text
			sqlstm += "where datecreated between '" + sdate + "' and '" + edate + "' ";
			if(!scht.equals("")) sqlstm += "and customer_name like '%" + scht + "%' ";
			break;

		case 2: // by job-id
			if(jid.equals("")) return;
			try {
				k = Integer.parseInt(jid); // make sure it's a number
				sqlstm += "where origid=" + jid;
			} catch (Exception e) { return; }
			break;
	}

	sqlstm += " order by origid";

	rcs = sqlhand.gpSqlGetRows(sqlstm);
	if(rcs.size() == 0) return;
	newlb.setRows(21); newlb.setMold("paging");
	newlb.addEventListener("onSelect", jobsclkier);
	ArrayList kabom = new ArrayList();
	String[] fl = { "origid","datecreated","customer_name","username","jobtype","order_type",
	"priority","etd","eta","pickup_date", "pickup_by" };
	for(d : rcs)
	{
		ngfun.popuListitems_Data(kabom,fl,d);
		lbhand.insertListItems(newlb,kiboo.convertArrayListToStringArray(kabom),"false","");
		kabom.clear();
	}
}

void jobItems(Object iwhat)
{
}

]]>
</zscript>

<style src="/real-world.css" />

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true" >
<panelchildren style="background:#36120B">

<label id="saved_label" value="SAVED.." style="color:#ffffff;text-decoration:blink;font-weight:bold" visible="false" />
<button visible="false" id="ji_calc_b" label="Calc" sclass="k9" onClick="jobItems(self)" />

<hbox style="padding:3px">
	<label value="Start date" sclass="k9b" />
	<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
	<label value="End date" sclass="k9b" />
	<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />

	<textbox id="searhtxt_tb" width="100px" sclass="k9" />
	<button label="Load/Find" sclass="k9mo" onClick="showJobs(1)" />

	<textbox id="jobid_tb" width="50px" sclass="k9" />
	<button label="by job" sclass="k9mo" onClick="showJobs(2)" />
</hbox>

<div id="jobs_holder" />
<separator height="3px" />

<hbox>
	<div id="items_holder" />
	<vbox visible="false">
	<hbox id="grandtotalbox" visible="false" >
		<vbox>
			<label value="Total monthly rental" style="color:#eeeeee;font-weight:bold" />
			<separator bar="true" />
			<label value="Job Grand Total" style="color:#eeeeee;font-weight:bold" />
			<separator bar="true" />
		</vbox>
		<vbox>
			<label id="grandmonthly" sclass="subhead2" />
			<label id="grandtotal" sclass="subhead2" style=";text-decoration:underline" />
		</vbox>
	</hbox>
	<!-- <label value="NOTI.ME" style="font-size:80px;color:#eb531a;font-weight:bold" /> -->
	</vbox>
</hbox>

<zscript>
<![CDATA[
//showJobs(1);
]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>

