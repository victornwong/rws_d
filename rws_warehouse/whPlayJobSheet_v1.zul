<?xml version="1.0" encoding="UTF-8"?>
<?page id="whplayjobsheetmmod"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="../rwglobal/uploadedWorksheet_v1.zs" />
<zscript src="../rwglobal/uploadDocu_v1.zs" />
<zscript src="./jobsheet/jobsheet_funcs.zs" />
<zscript>
<![CDATA[
MYTITLE = "WH Jobsheet - Items Request";
MYVERSION = "v0.1";
MYPANEL = "whplayjspan";
/*
@Title WH side play with jobsheet request items
@Authoer Victor Wong
@Since 10/09/2014
@Notes
Uses share functions in jobsheet_funcs.zs

*/
import java.util.*;
import java.text.*;
import org.apache.poi.hssf.usermodel.*;
import org.apache.poi.hssf.util.*;
import org.apache.poi.ss.util.*;
import org.victor.*;
sechand = new SecurityFuncs();
myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals(); sqlhand = new SqlFuncs(); lbhand = new ListboxHandler();
guihand = new GuiFuncs(); luhand = new LookupFuncs(); dmshand = new DMSFuncs();
gridhand = new GridHandler(); ngfun = new NGfuncs(); rwsqlfun = new RWMS_sql();

HashMap plx = new HashMap();
glob_sel_job = glob_sel_jobsheet = glob_sel_jstat = "";
last_joblist_type = 0;

// all these used in jobsheet_funcs.zs
listjobs_extrasql = " and jpl.pstatus='COMMIT'"; // only list committed items-req
reqitems_grid_type = 2; // WH side req-items, ada asset-tags colm and boxes
checkitems_doubleclicker = null;

 // Knockoff from jobSheetthing.zul but modified for WH side : pick-list functions dispenser
void pl_DoFunc(String itype)
{
	todaydate =  kiboo.todayISODateTimeString();
	sqlstm = msgtext = "";
	refresh = refresh_joblist = hideworkarea = false;
	unm = useraccessobj.username;

	if(itype.equals("saveass_b")) // save 'em scanned asset-tags
	{
		try
		{
			jnt = kiboo.replaceSingleQuotes(j_extranotes.getValue().trim());
			itms = qtys = atgs = "";
			jk = pl_rows.getChildren().toArray();
			for(i=0;i<jk.length;i++)
			{
				ki = jk[i].getChildren().toArray();
				itms += kiboo.replaceSingleQuotes( ki[2].getValue().trim().replaceAll("~"," ") ) + "~";
				qtys += kiboo.replaceSingleQuotes( ki[3].getValue().trim().replaceAll("~"," ") ) + "~";
				atgs += kiboo.replaceSingleQuotes( ki[4].getValue().trim().replaceAll("~"," ") ) + "~";
			}

			try { itms = itms.substring(0,itms.length()-1); } catch (Exception e) {}
			try { qtys = qtys.substring(0,qtys.length()-1); } catch (Exception e) {}
			try { atgs = atgs.substring(0,atgs.length()-1); } catch (Exception e) {}

			sqlstm = "if not exists (select 1 from rw_jobpicklist where parent_job=" + glob_sel_job + ") " +
			"insert into rw_jobpicklist (parent_job,username,datecreated,pl_items,pl_qty,pstatus,extranotes,pl_asset_tags) values " +
			"(" + glob_sel_job + ",'" + unm + "','" + todaydate + "','" + itms + "','" + qtys + "','DRAFT','" + jnt + "','" + atgs + "') " +
			"else " +
			"update rw_jobpicklist set pl_items='" + itms + "', pl_qty='" + qtys + "', pl_asset_tags='" + atgs + "', extranotes='" + jnt + "' where parent_job=" + glob_sel_job + ";";

			//refresh_joblist = true;
			msgtext = "Asset tags saved..";

		} catch (Exception e) {}
	}

	if(itype.equals("chkstock_b")) // check items inventory and loca
	{
		try
		{
			jk = pl_rows.getChildren().toArray();
			ArrayList itms = new ArrayList();
			for(i=0;i<jk.length;i++)
			{
				ki = jk[i].getChildren().toArray();
				if(ki[0].isChecked())
					itms.add(kiboo.replaceSingleQuotes(ki[2].getValue().trim()));
			}
			showCheckstock_win(winsholder,itms); // jobsheet_funcs.zs

		} catch (Exception e) {}
	}

	if(itype.equals("chkasses_b")) // check scanned asset-tags validity
	{
		try
		{
			jk = pl_rows.getChildren().toArray();
			for(i=0;i<jk.length;i++)
			{
				ki = jk[i].getChildren().toArray();
				if(ki[0].isChecked())
				{
					if(!ki[4].getValue().trim().equals(""))
						checkScannedTags(ki[2].getValue(),ki[4].getValue());
				}
			}

		} catch (Exception e) {}
	}

	if(itype.equals("printpl_b"))
	{
		if(glob_sel_job.equals("")) retunr;
		genWH_picklist(glob_sel_job);
	}

	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	if(refresh) drawPicklist(plx);
	if(refresh_joblist) showJobs(last_joblist_type);
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
	if(hideworkarea) workarea.setVisible(false);
}

// knock-off from wopAsschecker.zul
void checkScannedTags(String itemname, String iatgs)
{
Object[] wpshd =
{
	new listboxHeaderWidthObj("AssetTag",true,""),
	new listboxHeaderWidthObj("S/Num",true,""),
	new listboxHeaderWidthObj("Desc",true,""),
	new listboxHeaderWidthObj("Brand",true,""),
	new listboxHeaderWidthObj("Model",true,""),
	new listboxHeaderWidthObj("Grd",true,""),
	new listboxHeaderWidthObj("PalletNo",true,""),
	new listboxHeaderWidthObj("Type",true,""),
};

	mwin = ngfun.vMakeWindow(winsholder,"Check scanned tags : " + itemname.trim(),"0","center","500px","");
	kdiv = new Div();
	kdiv.setParent(mwin);
	Listbox newlb = lbhand.makeVWListbox_Width(kdiv, wpshd, "fndassets_lb", 5);

	tgs = iatgs.trim().split("\n");
	asts = "";
	for(i=0;i<tgs.length;i++)
	{
		asts += "'" + tgs[i].trim() + "',";
	}
	try { asts = asts.substring(0,asts.length()-1); } catch (Exception e) {}

	kk = "where ltrim(rtrim(s.code2)) in (" + asts + ") order by s.code2 desc;";
	if(itype == 2) kk = "where ltrim(rtrim(s.code)) in (" + asts + ") order by s.code desc;";

	sqlstm = "select s.name, s.code, s.code2, si.brandyh, si.modelyh, si.gradeyh, si.itemtypeyh, w.name as palletno " +
	"from mr001 s left join u0001 si on si.extraid = s.eoff " +
	"left join mr003 w on w.masterid = si.palletnoyh " + kk;
	
	ats = sqlhand.rws_gpSqlGetRows(sqlstm);
	if(ats.size() == 0) return;
	newlb.setRows(20); newlb.setMold("paging");
	//newlb.setMultiple(true); newlb.setCheckmark(true);
	ArrayList kabom = new ArrayList();
	String[] fl = { "code2", "code", "name", "brandyh", "modelyh", "gradeyh", "palletno", "itemtypeyh" };
	for(d : ats)
	{
		ngfun.popuListitems_Data2(kabom,fl,d);
		lbhand.insertListItems(newlb,kiboo.convertArrayListToStringArray(kabom),"false","");
		kabom.clear();
	}

	ngfun.gpMakeLabel(kdiv,"","Scanned: " + tgs.length.toString(),"");
	ngfun.gpMakeSeparator(2,"",kdiv);
	ngfun.gpMakeLabel(kdiv,"","Found: " + ats.size().toString(),"");
}

Object getJobpicklist_rec_byjob(String iwhat)
{
	sqlstm = "select * from rw_jobpicklist where parent_job=" + iwhat;
	return sqlhand.gpSqlFirstRow(sqlstm);
}

// Get loca/pallets by item name. HARDCODED some conditions
String locaPallet_byItem(String itm)
{
	retval = "";

	sqlstm = "select distinct pallet, sum(qty) as instk from partsall_0 where " +
	"name='" + itm + "' " +
	"and name not like '(DO NOT%' and name not like '%EIS%' " +
	"and pallet not like 'EIS%' and pallet<>'PROD' and pallet<>'WH PALLET' and pallet<>'OUT' " +
	"group by pallet having sum(qty) > 0";

	r = sqlhand.rws_gpSqlGetRows(sqlstm);
	if(r.size() == 0) return "";
	for(d : r)
	{
		retval += d.get("pallet") + "(" + GlobalDefs.nf0.format(d.get("instk")) + "), ";
	}
	try { retval = retval.substring(0,retval.length() - 2); } catch (Exception e) {}
	return retval;
}

// iwhat: job id
void genWH_picklist(String iwhat)
{
	jrec = rwsqlfun.getRWJob_rec(iwhat);
	if(jrec == null) return;
	jnum = jrec.get("origid").toString();
	jpl = getJobpicklist_rec_byjob(jnum);

	startadder = 1;
	rowcount = 1 + startadder;

	templatefn = "rwimg/jobpicklist_temp_1.xls";
	inpfn = session.getWebApp().getRealPath(templatefn);
	InputStream inp = new FileInputStream(inpfn);
	HSSFWorkbook excelWB = new HSSFWorkbook(inp);
	evaluator = excelWB.getCreationHelper().createFormulaEvaluator();
	HSSFSheet sheet = excelWB.getSheetAt(0);
	//HSSFSheet sheet = excelWB.createSheet("THINGS");

	Font wfont = excelWB.createFont();
	wfont.setFontHeightInPoints((short)8);
	wfont.setFontName("Arial");

	excelInsertString(sheet,0,1, "RWMS Job ID: " + jnum );
	excelInsertString(sheet,1,1, "Customer: " + jrec.get("customer_name") );
	excelInsertString(sheet,3,1, kiboo.checkNullString(jpl.get("extranotes")) );

	excelInsertString(sheet,0,3, "Date: " + GlobalDefs.dtf2.format(jrec.get("datecreated")) );
	excelInsertString(sheet,1,3, "ETD: " + GlobalDefs.dtf2.format(jrec.get("etd")) );
	excelInsertString(sheet,2,3, "JobType: " + kiboo.checkNullString(jrec.get("jobtype")) );
	excelInsertString(sheet,3,3, "OrderType: " + kiboo.checkNullString(jrec.get("order_type")) );

	CellStyle st3 =  excelWB.createCellStyle();
	st3.setFillForegroundColor(HSSFColor.GREY_40_PERCENT.index);
	st3.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);
	st3.setWrapText(true);
	//st3.setAlignment(CellStyle.ALIGN_CENTER);
	st3.setBorderLeft(CellStyle.BORDER_THIN);
	st3.setBorderRight(CellStyle.BORDER_THIN);
	st3.setBorderBottom(CellStyle.BORDER_THIN);
	st3.setFont(wfont);

	CellStyle st4 =  excelWB.createCellStyle();
	st4.cloneStyleFrom(st3);
	st4.setFillPattern(HSSFCellStyle.NO_FILL);

	// loop print the req items
	lnc = 1;
	itms = sqlhand.clobToString(jpl.get("pl_items")).split("~");
	qtys = sqlhand.clobToString(jpl.get("pl_qty")).split("~");

	for(i=0; i<itms.length; i++)
	{
		excelInsertString(sheet,5+i,0, lnc.toString() + ".");
		excelInsertString(sheet,5+i,1, itms[i]);
		excelInsertString(sheet,5+i,2, qtys[i]);
		excelInsertString(sheet,5+i,3, locaPallet_byItem(itms[i]) );
		lnc++;
		POI_SetCellStyleRange(sheet,st4,5+i,0,4);
	}

	tfname = iwhat + "_whpl.xls";
	outfn = session.getWebApp().getRealPath("tmp/" + tfname );
	FileOutputStream fileOut = new FileOutputStream(outfn);
	excelWB.write(fileOut);
	fileOut.close();

	downloadFile(kasiexport,tfname,outfn);

}

]]>
</zscript>

<popup id="adminPop">
	<div style="background:#EE1010;padding:3px" width="350px">
		<button id="admclrpckup_b" label="Clear pickup" sclass="k9mo" onClick="js_adminDo(self.getId())" />
		<button id="admclrcommit_b" label="Clear commit" sclass="k9mo" onClick="js_adminDo(self.getId())" />
	</div>
</popup> <!-- ENDOF adminPop -->

<style src="/real-world.css" />

<div width="1200px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true">
<panelchildren style="background:#516182">

	<label id="saved_label" value="SAVED.." style="color:#ffffff;text-decoration:blink;font-weight:bold" visible="false" />
	<button visible="false" id="ji_calc_b" label="Calc" sclass="k9" onClick="jobItems(self)" />

	<hbox style="padding:3px">
		<label value="Start date" sclass="k9b" />
		<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />
		<label value="End date" sclass="k9b" />
		<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" onCreate="kiboo.setTodayDatebox(self)" />

		<textbox id="searhtxt_tb" width="100px" sclass="k9" />
		<button label="Load/Find" sclass="k9mo" onClick="showJobs(1)" />

		<textbox id="jobid_tb" width="50px" sclass="k9" />
		<button label="by job" sclass="k9mo" onClick="showJobs(2)" />

		<button id="admin_b" label="ADMIN" sclass="k9mo" style="color:#D60D0D" onClick="adminPop.open(self)" visible="false" />
	</hbox>
	<div id="jobs_holder" />
	<separator height="3px" />

	<vbox id="workarea" visible="false">
		<label id="jobtitle_lb" sclass="subhead1" />
		<hbox>
			<vbox>
				<div sclass="shadowbox" style="background:#1D69A5" width="600px">
					<vbox>
						<label value="Job" sclass="subhead1" />
						<hbox visible="false">
							<button id="pickup_b" label="Pickup + request items" sclass="k9mo" onClick="pickJob_reqitems()" />
						</hbox>
						<div id="items_holder" />
					</vbox>
				</div>
				<div sclass="shadowbox" style="background:#1D69A5">
					<vbox>
						<label value="Jobsheet - Request items" sclass="subhead1" />
						<label value="WH extra notes" sclass="k9mo" style="color:#ffffff" />
						<textbox id="j_extranotes" multiline="true" width="400px" height="60px" sclass="k9" />

						<hbox>
							<button id="saveass_b" label="SAVE ASSET-TAGS only" sclass="k9mo" onClick="pl_DoFunc(self.getId())" />
							<button id="chkstock_b" label="Check inventory + loca" sclass="k9mo" onClick="pl_DoFunc(self.getId())" />
							<button id="chkasses_b" label="Check asset tags" sclass="k9mo" onClick="pl_DoFunc(self.getId())" />
							<button id="printpl_b" label="Print pick-list" sclass="k9mo" onClick="pl_DoFunc(self.getId())" />
							
						</hbox>
						<hbox visible="false">
							<button id="pladd_b" label="Add item" sclass="k9mo" onClick="pl_DoFunc(self.getId())" />
							<button id="plrem_b" label="Remove" sclass="k9mo" onClick="pl_DoFunc(self.getId())" />
							<button id="plsave_b" label="SAVE" sclass="k9mo" onClick="pl_DoFunc(self.getId())" />
							<button id="plcommit_b" label="COMMIT" sclass="k9mo" style="color:#D21111" onClick="pl_DoFunc(self.getId())" />
						</hbox>
						<div id="pl_holder" width="600px" />
					</vbox>
				</div>
			</vbox>

			<vbox visible="false">
				<hbox id="grandtotalbox" visible="false" >
					<vbox>
						<label value="Total monthly rental" style="color:#eeeeee;font-weight:bold" />
						<separator bar="true" />
						<label value="Job Grand Total" style="color:#eeeeee;font-weight:bold" />
						<separator bar="true" />
					</vbox>
					<vbox>
						<label id="grandmonthly" sclass="subhead2" />
						<label id="grandtotal" sclass="subhead2" style=";text-decoration:underline" />
					</vbox>
				</hbox>
				<!-- <label value="NOTI.ME" style="font-size:80px;color:#eb531a;font-weight:bold" /> -->
			</vbox>
		</hbox>
	</vbox>

	<div id="winsholder" visible="false" />
	<div id="kasiexport" visible="false" />

<zscript>
<![CDATA[

if(useraccessobj.accesslevel == 9)
{
	admin_b.setVisible(true);
	jobid_tb.setValue("1369");
}

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>

